Group:
    Rafael Martins 60602
    Rafael Pereira 60700


To extend task 1 with randomized package sizes, we simply used the rand module provided by Erlang. Each time the producer is to send a package to the truck, it will create
a random integer between 1 and the maximum package size defined in the input of the program. This way, every package will have a random size.

In the load_truck function we added a verification to check whether the size of the package is smaller than the maximum capacity of the trucks. If it is not, we simply 
assume the package cannot be loaded onto any truck and drop the package. This verification is useful to deal with cases where the user defines the maximum size of a package
to be higher than the maximum capacity of the trucks, helping the system maintain a correct state and not load packages into trucks if they don't fit. 

Usage:

To run our program we use the following commands -

    To compile the code we use: c(task2).
    To run the code we use: task2:start(N_TRUCKS, MAX_CAPACITY, MAX_PCK_SIZE) where N_TRUCKS represents the number of trucks in the system, MAX_CAPACITY represents the capacity of each truck
    and MAX_PCK_SIZE represents the maximum size of each package.